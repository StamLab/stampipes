includeConfig "../../nextflow.config"

process {
  // temporary until we get /scratch/ available on these nodes
  clusterOptions = "--exclude hpcz-0025,hpcz-0026,hpcz-0027,hpcz-0028"

  // Configure publishing directives

  // Convention: All files are saved under ${params.outdir}/${meta.name}

  cache = 'lenient'

  // merged fastq is published (for now)
  withName : "merge_fq" {
    publishDir = [
      path: { params.outdir },
      mode: "copy",
      saveAs: { f -> f.replace("_R","/R") }  // okay this feels really fragile.
    ]
  }

  // Rename cram files to match the input
  // Uses the 'meta.name' value inside the process
  withName: "sort_and_encode_cram" {
    publishDir = [
      path: { params.outdir },
      mode: "copy",
      saveAs: { f -> switch(f.tokenize('.').last()) {
        case "cram": return "${meta.name}/sorted.cram" 
        case "crai": return "${meta.name}/sorted.cram.crai" 
        default: return null
      }},
		]
    scratch = false
    memory = "32G"
  }

  // StarSOLO
  withName: "align" {
    publishDir = [
      path: { params.outdir },
      mode: "copy",
      saveAs: { f ->
        // Nested ternary is ugly, think of it like a switch statement.
        f == "Solo.out" ? "${meta.name}/Solo.out" : (
        f.startsWith("Log") ? "${meta.name}/logs/STARsolo/${f}" : (
        f.endsWith("cram") ? "${meta.name}/sorted.cram" : (
        f.endsWith("crai") ? "${meta.name}/sorted.cram.crai" :
        null
        )))
      }
    ]
    scratch = false
    module = "samtools/1.14"
  }

  // StarSOLO analysis
  withName: "analyze_solo_dir" {
    publishDir = [
      path: { params.outdir },
      mode: "copy",
      saveAs: { f -> f == "output" ? "${meta.name}/analysis" : null }
    ]
    module = "openssl-dev/1.0.1t"
  }

  // Flowcell stats
  withName: "merge_stats" {
    publishDir = [
      path: { params.outdir },
      mode: "copy",
    ]
  }
}

profiles {
  modules {
    process {
      withName: ".*:BCL2DEMUX:bcl2fastq.*" {
        module = "bcl2fastq2/2.20.0.422"
      }
      withName: ".*ALTSEQ:align.*" {
        module = "samtools/1.12"
      }
    }
  }
  singularity {
    singularity.enabled = true

    // Bind in /net/seq/data2/sequencers as readonly
    // This is necessary for the bcl2fastq step.
    singularity.runOptions = "--bind /net/seq/data2/sequencers/:/net/seq/data2/sequencers:ro,/net/seq/data2/projects/prime_seq/cell_ranger_ref/GRCh38-2022-Altius-gencode.v39-build/:/net/seq/data2/projects/prime_seq/cell_ranger_ref/GRCh38-2022-Altius-gencode.v39-build/:ro"
  }
}
