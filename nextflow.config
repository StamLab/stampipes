profiles {
  standard {
    process.executor = 'local'
  }
  cleanup {
    cleanup = true
  }

  cluster_old {
    process {
      executor = 'slurm'
      queue = 'queue0'
      errorStrategy = { task.exitStatus == 143 ? 'retry' : 'terminate' }
      //errorStrategy 'retry'
      maxRetries = 3
      memory = { 8.GB * task.attempt }

      scratch = true

      withLabel: 'low_mem' {
        memory = { 1.GB * task.attempt }
      }
      withLabel: 'high_mem' {
        memory = { 32.GB * (2**(task.attempt - 1)) }
      }

      // clusterOptions: "--nodeList hpcA04,hpcA05,hpcA08,hpcA09,hpcA10,hpcA11"
      clusterOptions: "--exclude hpcz-0007"
    }
  }

  cluster {
    process {
      executor = 'slurm'
      queue = 'hpcz-2'
      errorStrategy = { task.exitStatus in [137, 143] ? 'retry' : 'terminate' }
      //errorStrategy = { task.exitStatus in [137, 143] ? 'retry' : 'finish' }
      //errorStrategy 'retry'
      maxRetries = 4
      memory = { 8.GB * task.attempt }
      scratch = true
      //clusterOptions: "--exclude hpcz-0009"
	//clusterOptions: "--exclude hpcz-0041,hpcz-0042"
      // Hopefully causes nextflow to spread jobs out more
      // Unclear if this actually anything though, the way we're using it
      //clusterOptions: "--distribution=cyclic --exclude=hpcz-0032"

      withLabel: 'low_mem' {
        memory = { 1.GB * task.attempt }
      }
      withLabel: 'high_mem' {
        // Doubles each time
        memory = { 48.GB * (2**(task.attempt - 1)) }
      }

      //clusterOptions: "--exclude hpcz-0035,hpcz-0040"
    }
  }

  ignore_process_failures {
    //process.errorStrategy = { task.exitStatus == 143 ? 'retry' : 'ignore' }
    process.errorStrategy = 'ignore'
  }

  pipefail {
    // Untested, but should give better resiliency to shell scripts we run
    // The risk is that we have some 'allowable' pipe failures that will cause our jobs to fail when they shouldn't
    // (e.g: `process1 | head | ...` may cause process1 to exit with error code)
    process.shell = ['/bin/bash', '-ueo','pipefail' ]
  }

  debug {
    process.scratch = false
  }

  singularity {
    singularity.enabled = true
  }

  docker {
    process.container = "fwip/stampipes:latest"
    docker {
      enabled = true
      fixOwnership = true
      temp = 'auto'
    }
  }
}

report {
  enabled = true
}
trace {
  enabled = true
}
timeline {
  enabled = true
}
dag {
  enabled = true
  file = "dag.html"
  overwrite = true
}
